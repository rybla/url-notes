1:"$Sreact.fragment"
2:I[7555,[],""]
3:I[1295,[],""]
5:I[9665,[],"OutletBoundary"]
7:I[4911,[],"AsyncMetadataOutlet"]
9:I[9665,[],"ViewportBoundary"]
b:I[9665,[],"MetadataBoundary"]
c:"$Sreact.suspense"
e:I[8393,[],""]
:HL["/url-notes/_next/static/css/9881504be370c91a.css","style"]
:HL["/url-notes/_next/static/css/b4a799145eafaf0f.css","style"]
0:{"P":null,"b":"cw_i-A1Gm7h2iWE2ToIEf","p":"/url-notes","c":["","all","112"],"i":false,"f":[[["",{"children":["all",{"children":[["pageIndex","112","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/url-notes/_next/static/css/9881504be370c91a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"$undefined","children":["$","body",null,{"className":"$undefined","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["all",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["pageIndex","112","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",[["$","link","0",{"rel":"stylesheet","href":"/url-notes/_next/static/css/b4a799145eafaf0f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L5",null,{"children":["$L6",["$","$L7",null,{"promise":"$@8"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$L9",null,{"children":"$La"}],null],["$","$Lb",null,{"children":["$","div",null,{"hidden":true,"children":["$","$c",null,{"fallback":null,"children":"$Ld"}]}]}]]}],false]],"m":"$undefined","G":["$e",[]],"s":false,"S":true}
a:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
6:null
f:I[6874,["874","static/chunks/874-437a265a67d6cfee.js","216","static/chunks/app/all/%5BpageIndex%5D/page-521ba4b8b4cd9408.js"],""]
25:I[8175,[],"IconMark"]
4:["$","div",null,{"className":"AppPage_AppPage__MciWo","children":[["$","div",null,{"className":"AppPage_toolbar__H52v2","children":[["$","div",null,{"className":"AppPage_navigation__Luced","children":[["$","div","item-0",{"className":"AppPage_item__vUL6b","children":["$","$Lf","0",{"className":"LinkButton_LinkButton__nW1G0 LinkButton_vertical__B1tIH","href":"/","target":"$undefined","children":"index"}]}],["$","div","sep-0",{"className":"AppPage_item__vUL6b","children":"‚Üê"}],["$","div","item-1",{"className":"AppPage_item__vUL6b","children":["$","$Lf","0",{"className":"LinkButton_LinkButton__nW1G0 LinkButton_vertical__B1tIH","href":"/all/0","target":"$undefined","children":"all"}]}]]}],["$","div",null,{"className":"AppPage_cornerstone__p6Wox"}]]}],["$","div",null,{"className":"AppPage_main__PIVFu","children":[["$","div",null,{"className":"page_previews__BuBMS","children":[["$","div","sep-0",{"className":"page_addedDate__qyLFb","children":"2025-08-14"}],["$","div","0",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://okmij.org/ftp/tagless-final/Compiler/index.html","target":"_blank","children":"Compiler"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2025-04-30"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong","strong-0",{"children":"Project:"}]," A course detailing the construction of a compiler for a \"Tiger-like\" procedural language, targeting x86-64 assembly."]}],"\n",["$","li","li-1",{"children":[["$","strong","strong-0",{"children":"Implementation Language:"}]," OCaml."]}],"\n",["$","li","li-2",{"children":[["$","strong","strong-0",{"children":"Core Architecture:"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong","strong-0",{"children":"Incremental Development:"}]," The compiler is built in iterative steps, starting with a minimal language (integer literals) and progressively adding features. Each step results in a complete, testable compiler for a language subset."]}],"\n",["$","li","li-1",{"children":[["$","strong","strong-0",{"children":"Tagless-Final Style:"}]," Extensively used to structure the compiler as a stack of extensible domain-specific languages. This promotes reuse of type-checked and compiled components across development stages."]}],"\n",["$","li","li-2",{"children":[["$","strong","strong-0",{"children":"Variable Handling:"}]," A notable feature is the treatment of variables and scope using a technique analogous to algebraic effects for analyzing usage and associating attributes."]}],"\n"]}],"\n"]}],"\n",["$","li","li-3",{"children":[["$","strong","strong-0",{"children":"Build System:"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":["Utilizes a custom build tool (",["$","code","code-0",{"children":"build.ml"}],"), an OCaml script, instead of ",["$","code","code-1",{"children":"make"}],"."]}],"\n",["$","li","li-1",{"children":"This tool is designed to handle the project's specific incremental structure, where source files are spread across multiple directories corresponding to development steps. It provides an explicit manifest of all source files and their build order."}],"\n"]}],"\n"]}],"\n",["$","li","li-4",{"children":[["$","strong","strong-0",{"children":"Course Content:"}]," Covers standard compiler topics, including parsing (",["$","code","code-0",{"children":"ocamllex"}],"/",["$","code","code-1",{"children":"ocamlyacc"}],"), type-checking, memory allocation, code generation for expressions, control flow, functions (nested, mutually-recursive), and state management."]}],"\n"]}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://okmij.org/ftp/tagless-final/Compiler/index.html","target":"_blank","children":"üîó"}]}]]}],["$","div","sep-1",{"className":"page_addedDate__qyLFb","children":"2025-08-14"}],["$","div","1",{"className":"ArticlePreview_ArticlePreview__59E_4","children":["$L10","$undefined","$L11","$L12","$L13"]}],"$L14","$L15","$L16","$L17","$L18","$L19","$L1a","$L1b","$L1c","$L1d","$L1e","$L1f","$L20","$L21","$L22","$L23"]}],"$L24"]}]]}]
8:{"metadata":[["$","title","0",{"children":"url-notes | all | page 113 of 125"}],["$","link","1",{"rel":"icon","href":"/url-notes/favicon.ico","type":"image/x-icon","sizes":"256x256"}],["$","$L25","2",{}]],"error":null,"digest":"$undefined"}
d:"$8:metadata"
10:["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://okmij.org/ftp/ML/MetaOCaml.html","target":"_blank","children":"MetaOCaml -- an OCaml dialect for multi-stage programming"}]}]
11:["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2025-06-01"]}]
12:["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":["\n",["$","p","p-0",{"children":[["$","strong","strong-0",{"children":"Core Concept"}],": MetaOCaml is a statically-typed, multi-stage programming language, implemented as a conservative extension of OCaml. It is designed for writing programs that generate specialized and optimized code at runtime."]}],"\n"]}],"\n",["$","li","li-1",{"children":["\n",["$","p","p-0",{"children":[["$","strong","strong-0",{"children":"Key Language Constructs"}],":"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong","strong-0",{"children":["Code Type (",["$","code","code-0",{"children":"'a code"}],")"]}],": A type representing a fragment of a future-stage program that will produce a value of type ",["$","code","code-0",{"children":"'a"}],"."]}],"\n",["$","li","li-1",{"children":[["$","strong","strong-0",{"children":["Brackets (",["$","code","code-0",{"children":".<e>."}],")"]}],": \"Quotes\" an expression ",["$","code","code-0",{"children":"e"}],", deferring its computation to a later stage and creating a value of type ",["$","code","code-1",{"children":"code"}],"."]}],"\n",["$","li","li-2",{"children":[["$","strong","strong-0",{"children":["Escape (",["$","code","code-0",{"children":".~e"}],")"]}],": Used within brackets to splice the result of a present-stage computation (which must be of a ",["$","code","code-0",{"children":"code"}]," type) into the generated code."]}],"\n"]}],"\n"]}],"\n",["$","li","li-2",{"children":["\n",["$","p","p-0",{"children":[["$","strong","strong-0",{"children":"Static Guarantees"}],":"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong","strong-0",{"children":"Type Safety"}],": A well-typed MetaOCaml program is guaranteed to generate well-typed OCaml code. Type errors are caught in the generator, not the generated code."]}],"\n",["$","li","li-1",{"children":[["$","strong","strong-0",{"children":"Scope Safety (Hygiene)"}],": Lexical scope is preserved. A dynamic \"scope extrusion\" check aborts generation if a variable would escape its binder, providing a strong guarantee of well-scoped code. This replaces the older, less comprehensive static \"environment classifier\" system."]}],"\n"]}],"\n"]}],"\n",["$","li","li-3",{"children":["\n",["$","p","p-0",{"children":[["$","strong","strong-0",{"children":"Code Execution & Offshoring"}],":"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":["Generated code can be compiled (to bytecode or native code via ",["$","code","code-0",{"children":"Runcode.run"}],") and dynamically linked back into the running program, enabling run-time code specialization."]}],"\n",["$","li","li-1",{"children":[["$","strong","strong-0",{"children":"Offshoring"}],": A subset of the generated OCaml code can be translated into a simple imperative intermediate language, which can then be transcribed to targets like C, LLVM, or OpenCL."]}],"\n"]}],"\n"]}],"\n",["$","li","li-4",{"children":["\n",["$","p","p-0",{"children":[["$","strong","strong-0",{"children":"Advanced Generative Features"}],":"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong","strong-0",{"children":["Let-Insertion (",["$","code","code-0",{"children":"genlet"}],")"]}],": A primitive to control evaluation and code motion by explicitly creating ",["$","code","code-0",{"children":"let"}],"-bindings in the generated code. The insertion point is automatically determined to preserve scoping, but can be manually controlled with ",["$","code","code-1",{"children":"locus"}],"."]}],"\n",["$","li","li-1",{"children":[["$","strong","strong-0",{"children":["Recursive Definition Generation (",["$","code","code-0",{"children":"mkgenlet"}],")"]}],": Generates ",["$","code","code-0",{"children":"let rec"}]," bindings for a statically unknown number of mutually recursive functions, useful for specializing recursive functions or generating state machines."]}],"\n",["$","li","li-2",{"children":[["$","strong","strong-0",{"children":["First-Class Patterns (","$L26",")"]}],": Dynamically constructs ","$L27"," expressions from a list of ","$L28"," values (function literals), enabling the generation of pattern matches with a variable number of clauses."]}],"\n","$L29","\n"]}],"\n"]}],"\n"]}]]}]
13:["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://okmij.org/ftp/ML/MetaOCaml.html","target":"_blank","children":"üîó"}]}]
14:["$","div","sep-2",{"className":"page_addedDate__qyLFb","children":"2025-08-14"}]
15:["$","div","2",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://okmij.org/ftp/ChangeLog-19.html","target":"_blank","children":"What was new 8/2014 - 7/2015"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2025-06-30"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"list of updates to this whole site, 8/2014 - 7/2015"}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://okmij.org/ftp/ChangeLog-19.html","target":"_blank","children":"üîó"}]}]]}]
16:["$","div","sep-3",{"className":"page_addedDate__qyLFb","children":"2025-08-14"}]
17:["$","div","3",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://okmij.org/ftp/ML/index.html#dynvar","target":"_blank","children":"ML Programming"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2025-06-30"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"The index page for the portion of the web site related to OCaml, SML and MetaOCaml"}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://okmij.org/ftp/ML/index.html#dynvar","target":"_blank","children":"üîó"}]}]]}]
18:["$","div","sep-4",{"className":"page_addedDate__qyLFb","children":"2025-08-14"}]
19:["$","div","4",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://okmij.org/ftp/Computation/dynamic-binding.html","target":"_blank","children":"Dynamic Binding"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2025-06-30"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"Dynamic binding, especially in the presence of (delimited) control effects"}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://okmij.org/ftp/Computation/dynamic-binding.html","target":"_blank","children":"üîó"}]}]]}]
1a:["$","div","sep-5",{"className":"page_addedDate__qyLFb","children":"2025-08-14"}]
1b:["$","div","5",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://okmij.org/ftp/Algorithms/map-monoid-reduce.html#nested-agg","target":"_blank","children":"Folding in Parallel"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2025-08-05"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"Representing fold (sequential accumulation) as map composed with a reduce over a monoid, non-trivially and efficiently. This is a bedrock of parallel programming: however, although the general principle is known, applying it to concrete problems requires ingenuity"}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://okmij.org/ftp/Algorithms/map-monoid-reduce.html#nested-agg","target":"_blank","children":"üîó"}]}]]}]
1c:["$","div","sep-6",{"className":"page_addedDate__qyLFb","children":"2025-08-14"}]
1d:["$","div","6",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://feeds.feedblitz.com/~/923097251/0/marginalrevolution~Emergent-Ventures-winners-th-cohort.html","target":"_blank","children":"Emergent Ventures winners, 45th cohort - Marginal REVOLUTION"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2025-08-12"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong","strong-0",{"children":"Anya Singh:"}]," IP protection project."]}],"\n",["$","li","li-1",{"children":[["$","strong","strong-0",{"children":"Patrick Murphy:"}]," Travel grant."]}],"\n",["$","li","li-2",{"children":[["$","strong","strong-0",{"children":"Daryna Hrybchuk:"}]," General career support."]}],"\n",["$","li","li-3",{"children":[["$","strong","strong-0",{"children":"Ari Shtein:"}]," General career support."]}],"\n",["$","li","li-4",{"children":[["$","strong","strong-0",{"children":"Vadzim Rayinchick:"}]," \"Confessions\" project."]}],"\n",["$","li","li-5",{"children":[["$","strong","strong-0",{"children":"Garret Thomas Molloy:"}]," Travel and study grant."]}],"\n",["$","li","li-6",{"children":[["$","strong","strong-0",{"children":"Jon Cooper:"}]," Application of AI to historical archives."]}],"\n",["$","li","li-7",{"children":[["$","strong","strong-0",{"children":"Jerusalem Demsas:"}]," General career support for new projects."]}],"\n",["$","li","li-8",{"children":[["$","strong","strong-0",{"children":"Manuel Martin Morante:"}]," Support for a visit to MIT, with the goal of an eventual biotech start-up."]}],"\n",["$","li","li-9",{"children":[["$","strong","strong-0",{"children":"Jal Patel:"}]," General career support in AI and biotech."]}],"\n",["$","li","li-10",{"children":[["$","strong","strong-0",{"children":"Ayana Farooq:"}]," Project related to brain neurons."]}],"\n",["$","li","li-11",{"children":[["$","strong","strong-0",{"children":"Adria Moret:"}]," Project on AI and philosophy, aimed at improving LLM understanding of animal welfare."]}],"\n"]}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://feeds.feedblitz.com/~/923097251/0/marginalrevolution~Emergent-Ventures-winners-th-cohort.html","target":"_blank","children":"üîó"}]}]]}]
1e:["$","div","sep-7",{"className":"page_addedDate__qyLFb","children":"2025-08-14"}]
1f:["$","div","7",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://feeds.feedblitz.com/~/923104400/0/marginalrevolution~Why-did-air-conditioning-spread-so-fast-in-Mexico.html","target":"_blank","children":"Why did air conditioning spread so fast in Mexico? - Marginal REVOLUTION"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2025-08-12"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":"A 2015 model predicting air conditioning (AC) adoption in Mexico based on income and temperature has been found to have significantly underestimated growth."}],"\n",["$","li","li-1",{"children":"The prediction gap is not explained by errors in forecasting income growth, temperature increases, migration patterns, or model restrictions."}],"\n",["$","li","li-2",{"children":"The primary drivers for the accelerated adoption were falling electricity prices and technological improvements in AC efficiency, which were not accounted for in the original model."}],"\n",["$","li","li-3",{"children":"As of 2022, Mexico's AC penetration reached approximately 18.5%."}],"\n"]}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://feeds.feedblitz.com/~/923104400/0/marginalrevolution~Why-did-air-conditioning-spread-so-fast-in-Mexico.html","target":"_blank","children":"üîó"}]}]]}]
20:["$","div","sep-8",{"className":"page_addedDate__qyLFb","children":"2025-08-14"}]
21:["$","div","8",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://feeds.feedblitz.com/~/923131817/0/marginalrevolution~My-podcast-with-Mitch-Daniels.html","target":"_blank","children":"My podcast with Mitch Daniels - Marginal REVOLUTION"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2025-08-12"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"Done with Liberty Fund, I very much enjoyed chatting with him.¬† Here is the link.¬† Here is their episode summary: Tyler Cowen joins Mitch Daniels to explore AI‚Äôs promise, economic threats from debt and regulation, and the need for bold, intelligent policy to secure economic growth, innovation, and individual liberty. Cowen discusses his views on [‚Ä¶]"}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://feeds.feedblitz.com/~/923131817/0/marginalrevolution~My-podcast-with-Mitch-Daniels.html","target":"_blank","children":"üîó"}]}]]}]
22:["$","div","sep-9",{"className":"page_addedDate__qyLFb","children":"2025-08-14"}]
23:["$","div","9",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://feeds.feedblitz.com/~/923139047/0/marginalrevolution~Tuesday-assorted-links.html","target":"_blank","children":"Tuesday assorted links - Marginal REVOLUTION"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2025-08-12"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":["$","a","a-0",{"href":"https://www.youtube.com/watch?v=E9TbDzH7N3w","children":"Video: Bells ringing before Vespers"}]}],"\n",["$","li","li-1",{"children":["$","a","a-0",{"href":"https://x.com/GestaltU/status/1954561703967867019","children":"X/Twitter Post: Commentary on AI"}]}],"\n",["$","li","li-2",{"children":["$","a","a-0",{"href":"https://x.com/NYMag/status/1954885162572910734","children":"X/Twitter Post: Report on cryptocurrency-related kidnappings"}]}],"\n",["$","li","li-3",{"children":["$","a","a-0",{"href":"https://www.theatlantic.com/ideas/archive/2025/08/trump-university-presidents/683803/","children":"The Atlantic Article: Disagreements among university presidents"}]}],"\n",["$","li","li-4",{"children":[["$","a","a-0",{"href":"https://x.com/esaagar/status/1954905819767570817","children":"Discussion: Reasons for decline in Washington D.C."}],", including high rates of ",["$","a","a-1",{"href":"https://x.com/CharlesFLehman/status/1955239699347279959","children":"violence"}],". The author suggests most of D.C. should be absorbed by Maryland."]}],"\n",["$","li","li-5",{"children":["$","a","a-0",{"href":"","children":"Substack Post: Scott Sumner on Lerner symmetry"}]}],"\n",["$","li","li-6",{"children":["$","a","a-0",{"href":"https://www.maximum-progress.com/p/is-air-travel-getting-worse","children":"Article: Analysis of the state of air travel"}]}],"\n"]}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://feeds.feedblitz.com/~/923139047/0/marginalrevolution~Tuesday-assorted-links.html","target":"_blank","children":"üîó"}]}]]}]
24:["$","div",null,{"className":"page_toolbar__VAh0U","children":[["$","div",null,{"className":"page_navigation___3IFr","children":[["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"/all/111","target":"$undefined","children":"newer"}],["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"/all/113","target":"$undefined","children":"older"}]]}],["$","div",null,{"className":"page_location__WbWIR","children":[["$","span",null,{"className":"FocusSpan_FocusSpan__MPt_V","children":113}],"/",125]}]]}]
26:["$","code","code-0",{"children":"make_match"}]
27:["$","code","code-0",{"children":"match"}]
28:["$","code","code-1",{"children":"pat_code"}]
29:["$","li","li-3",{"children":[["$","strong","strong-0",{"children":"Cross-Stage Persistence (CSP)"}],": Allows values from the generator stage to be used in the generated code. Global identifiers are treated as library references. Local identifiers of known serializable types are copied by value; others are handled by reference via closures."]}]
