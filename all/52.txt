1:"$Sreact.fragment"
2:I[7555,[],""]
3:I[1295,[],""]
5:I[9665,[],"OutletBoundary"]
7:I[4911,[],"AsyncMetadataOutlet"]
9:I[9665,[],"ViewportBoundary"]
b:I[9665,[],"MetadataBoundary"]
c:"$Sreact.suspense"
e:I[8393,[],""]
:HL["/url-notes/_next/static/css/9881504be370c91a.css","style"]
:HL["/url-notes/_next/static/css/b4a799145eafaf0f.css","style"]
0:{"P":null,"b":"b2mnUXL4MaKSgjc7X3rZL","p":"/url-notes","c":["","all","52"],"i":false,"f":[[["",{"children":["all",{"children":[["pageIndex","52","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/url-notes/_next/static/css/9881504be370c91a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"$undefined","children":["$","body",null,{"className":"$undefined","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["all",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["pageIndex","52","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",[["$","link","0",{"rel":"stylesheet","href":"/url-notes/_next/static/css/b4a799145eafaf0f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L5",null,{"children":["$L6",["$","$L7",null,{"promise":"$@8"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$L9",null,{"children":"$La"}],null],["$","$Lb",null,{"children":["$","div",null,{"hidden":true,"children":["$","$c",null,{"fallback":null,"children":"$Ld"}]}]}]]}],false]],"m":"$undefined","G":["$e",[]],"s":false,"S":true}
a:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
6:null
f:I[6874,["874","static/chunks/874-437a265a67d6cfee.js","216","static/chunks/app/all/%5BpageIndex%5D/page-521ba4b8b4cd9408.js"],""]
20:I[8175,[],"IconMark"]
4:["$","div",null,{"className":"AppPage_AppPage__MciWo","children":[["$","div",null,{"className":"AppPage_toolbar__H52v2","children":[["$","div",null,{"className":"AppPage_navigation__Luced","children":[["$","div","item-0",{"className":"AppPage_item__vUL6b","children":["$","$Lf","0",{"className":"LinkButton_LinkButton__nW1G0 LinkButton_vertical__B1tIH","href":"/","target":"$undefined","children":"index"}]}],["$","div","sep-0",{"className":"AppPage_item__vUL6b","children":"‚Üê"}],["$","div","item-1",{"className":"AppPage_item__vUL6b","children":["$","$Lf","0",{"className":"LinkButton_LinkButton__nW1G0 LinkButton_vertical__B1tIH","href":"/all/0","target":"$undefined","children":"all"}]}]]}],["$","div",null,{"className":"AppPage_cornerstone__p6Wox"}]]}],["$","div",null,{"className":"AppPage_main__PIVFu","children":[["$","div",null,{"className":"page_previews__BuBMS","children":[["$","div","sep-0",{"className":"page_addedDate__qyLFb","children":"2025-08-21"}],["$","div","0",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://chrisdone.com/posts/dynamically-typed-haskell","target":"_blank","children":"Dynamically typed Haskell"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2019-04-05"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"For a while I‚Äôve been intending to make a package that provides a\ndynamic type and a trivial means to read/write that type to/from\nCSV/JSON and web requests. I thought that this would be enough to\nprovide a convenient package for doing exploratory work against unknown\ndata."}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://chrisdone.com/posts/dynamically-typed-haskell","target":"_blank","children":"üîó"}]}]]}],["$","div","sep-1",{"className":"page_addedDate__qyLFb","children":"2025-08-21"}],["$","div","1",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://chrisdone.com/posts/german-naming-convention","target":"_blank","children":"German Naming Convention"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2019-06-06"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"As a software consultant, mostly contributing code to other company‚Äôs\ncodebases, and doing code review, I‚Äôve seen about thirty separate\ncodebases over the past half dozen years, and there‚Äôs one thing that\ncould make my life much easier: better naming convention."}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://chrisdone.com/posts/german-naming-convention","target":"_blank","children":"üîó"}]}]]}],["$","div","sep-2",{"className":"page_addedDate__qyLFb","children":"2025-08-21"}],["$","div","2",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://chrisdone.com/posts/clientside-programming-haskell","target":"_blank","children":"Client-side web programming in Haskell: A retrospective"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2019-07-24"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"At the beginning of this decade (2010), a few of us Haskellers were\nexploring how best to do client-side web programming. We didn‚Äôt want to\nwrite JavaScript. There‚Äôs a surprising number of techniques we tried to\navoid doing so. There was work coming from academia and industry. Here‚Äôs\na history of my own experience in this problem space."}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":"$L10"}]]}],"$L11","$L12","$L13","$L14","$L15","$L16","$L17","$L18","$L19","$L1a","$L1b","$L1c","$L1d","$L1e"]}],"$L1f"]}]]}]
8:{"metadata":[["$","title","0",{"children":"url-notes | all | page 53 of 91"}],["$","link","1",{"rel":"icon","href":"/url-notes/favicon.ico","type":"image/x-icon","sizes":"256x256"}],["$","$L20","2",{}]],"error":null,"digest":"$undefined"}
d:"$8:metadata"
10:["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://chrisdone.com/posts/clientside-programming-haskell","target":"_blank","children":"üîó"}]
11:["$","div","sep-3",{"className":"page_addedDate__qyLFb","children":"2025-08-21"}]
12:["$","div","3",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://chrisdone.com/posts/static-smart-constructors","target":"_blank","children":"Static Smart Constructors with Double Splices"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2019-08-21"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"I plan on using this technique in at least one library, and so\nthought it would be worth giving a name and a page dedicated to it, so\nit can be linked to, instead of explained all over again."}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://chrisdone.com/posts/static-smart-constructors","target":"_blank","children":"üîó"}]}]]}]
13:["$","div","sep-4",{"className":"page_addedDate__qyLFb","children":"2025-08-21"}]
14:["$","div","4",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://chrisdone.com/posts/statically-checked-overloaded-strings","target":"_blank","children":"Statically Checked Overloaded Strings"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2019-11-12"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"This page demonstrates a trick I came up with which is defining\nIsString for Q (TExp a), where a\nis lift-able. It allows you to write $$(\"...\")\nand have the string parsed at compile-time."}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://chrisdone.com/posts/statically-checked-overloaded-strings","target":"_blank","children":"üîó"}]}]]}]
15:["$","div","sep-5",{"className":"page_addedDate__qyLFb","children":"2025-08-21"}]
16:["$","div","5",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://chrisdone.com/posts/defaulting-fields-in-a-record","target":"_blank","children":"Defaulting fields in a record"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2019-12-06"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"Do you have 20+ fields of configuration for your kitchen sink API?\nThis approach might be for you."}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://chrisdone.com/posts/defaulting-fields-in-a-record","target":"_blank","children":"üîó"}]}]]}]
17:["$","div","sep-6",{"className":"page_addedDate__qyLFb","children":"2025-08-21"}]
18:["$","div","6",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://chrisdone.com/posts/ghost-of-departed-proofs-conveniences","target":"_blank","children":"Ghosts of Departed Proofs Convenience"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2019-12-06"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"Following on from Ghosts\nof Departed Proofs with a Named type as defined in\nOlliver\nCharles‚Äôs post on the same topic, we can add a usability improvement\nby defining a SomeNamed existential in order to wrap up the\nnew type introduced for the n in Name n a, and\nthen a pattern synonym to conveniently unwrap that constructor."}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://chrisdone.com/posts/ghost-of-departed-proofs-conveniences","target":"_blank","children":"üîó"}]}]]}]
19:["$","div","sep-7",{"className":"page_addedDate__qyLFb","children":"2025-08-21"}]
1a:["$","div","7",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://chrisdone.com/posts/whats-wrong-with-the-grid","target":"_blank","children":"What‚Äôs wrong with the grid?"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2020-11-11"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"The grid system in spreadsheets is very simple. It‚Äôs also very\npowerful, and it‚Äôs powerful because it‚Äôs simple. As a user you can\nimmediately start entering data without even thinking about it. And\nthen, in an ad hoc fashion, you can add logic and conditions as you\nthink of them."}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://chrisdone.com/posts/whats-wrong-with-the-grid","target":"_blank","children":"üîó"}]}]]}]
1b:["$","div","sep-8",{"className":"page_addedDate__qyLFb","children":"2025-08-21"}]
1c:["$","div","8",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://chrisdone.com/posts/language-of-spreadsheets-is-bad","target":"_blank","children":"The language of spreadsheets is bad"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2020-11-12"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"The user interface in a spreadsheet is modal. There are two\nmodes:"}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://chrisdone.com/posts/language-of-spreadsheets-is-bad","target":"_blank","children":"üîó"}]}]]}]
1d:["$","div","sep-9",{"className":"page_addedDate__qyLFb","children":"2025-08-21"}]
1e:["$","div","9",{"className":"ArticlePreview_ArticlePreview__59E_4","children":[["$","div",null,{"className":"ArticlePreview_title__Snpua","children":["$","$Lf",null,{"href":"https://chrisdone.com/posts/import-aliases-field-names","target":"_blank","children":"Use import aliases to easily access fields"}]}],"$undefined",["$","div",null,{"className":"ArticlePreview_publishedTime__MauIG","children":["published: ","2020-12-14"]}],["$","div",null,{"className":"ArticlePreview_summary__Zyb4E","children":[["$","p","p-0",{"children":"This post demonstrates using imports as a quick and easy way to\ndisambiguate record field names. You can still put all your types in one\nmodule."}]]}],["$","div",null,{"className":"ArticlePreview_footer__lkeLY","children":["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"https://chrisdone.com/posts/import-aliases-field-names","target":"_blank","children":"üîó"}]}]]}]
1f:["$","div",null,{"className":"page_toolbar__VAh0U","children":[["$","div",null,{"className":"page_navigation___3IFr","children":[["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"/all/51","target":"$undefined","children":"newer"}],["$","$Lf",null,{"className":"LinkButton_LinkButton__nW1G0","href":"/all/53","target":"$undefined","children":"older"}]]}],["$","div",null,{"className":"page_location__WbWIR","children":[["$","span",null,{"className":"FocusSpan_FocusSpan__MPt_V","children":53}],"/",91]}]]}]
